public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}public static class NetVarOffsets {
	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWeapons;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_skybox3d.scale;
		public static long m_skybox3d.origin;
		public static long m_skybox3d.area;
		public static long m_skybox3d.fog.enable;
		public static long m_skybox3d.fog.blend;
		public static long m_skybox3d.fog.dirPrimary;
		public static long m_skybox3d.fog.colorPrimary;
		public static long m_skybox3d.fog.colorSecondary;
		public static long m_skybox3d.fog.start;
		public static long m_skybox3d.fog.end;
		public static long m_skybox3d.fog.maxdensity;
		public static long m_skybox3d.fog.HDRColorScale;
		public static long m_audio.localSound[0];
		public static long m_audio.localSound[1];
		public static long m_audio.localSound[2];
		public static long m_audio.localSound[3];
		public static long m_audio.localSound[4];
		public static long m_audio.localSound[5];
		public static long m_audio.localSound[6];
		public static long m_audio.localSound[7];
		public static long m_audio.soundscapeIndex;
		public static long m_audio.localBits;
		public static long m_audio.entIndex;
		public static long m_vecViewOffset[0];
		public static long m_vecViewOffset[1];
		public static long m_vecViewOffset[2];
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity[0];
		public static long m_vecVelocity[1];
		public static long m_vecVelocity[2];
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel[0];
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_PlayerFog.m_hCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_vecOrigin;
		public static long m_vecOrigin[2];
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_angEyeAngles[0];
		public static long m_angEyeAngles[1];
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
	}
    public static void load() {
		DT_CSPlayer.m_flAnimTime = Netvars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = Netvars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = Netvars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = Netvars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = Netvars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = Netvars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_angRotation = Netvars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = Netvars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = Netvars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = Netvars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = Netvars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = Netvars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = Netvars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = Netvars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = Netvars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = Netvars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = Netvars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = Netvars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = Netvars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = Netvars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = Netvars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = Netvars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = Netvars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = Netvars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = Netvars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = Netvars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = Netvars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = Netvars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = Netvars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = Netvars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = Netvars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = Netvars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = Netvars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = Netvars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = Netvars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = Netvars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = Netvars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = Netvars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = Netvars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = Netvars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = Netvars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = Netvars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = Netvars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = Netvars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = Netvars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = Netvars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = Netvars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = Netvars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = Netvars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = Netvars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = Netvars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = Netvars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = Netvars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = Netvars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = Netvars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = Netvars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = Netvars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = Netvars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = Netvars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = Netvars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = Netvars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = Netvars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = Netvars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = Netvars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = Netvars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = Netvars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = Netvars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = Netvars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = Netvars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = Netvars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = Netvars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = Netvars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = Netvars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = Netvars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = Netvars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = Netvars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = Netvars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = Netvars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = Netvars.byName("DT_CSPlayer", "m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = Netvars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = Netvars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = Netvars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = Netvars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = Netvars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = Netvars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = Netvars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = Netvars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = Netvars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = Netvars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = Netvars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = Netvars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = Netvars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = Netvars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = Netvars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = Netvars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = Netvars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = Netvars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = Netvars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = Netvars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = Netvars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_skybox3d.scale = Netvars.byName("DT_CSPlayer", "m_skybox3d.scale");
		DT_CSPlayer.m_skybox3d.origin = Netvars.byName("DT_CSPlayer", "m_skybox3d.origin");
		DT_CSPlayer.m_skybox3d.area = Netvars.byName("DT_CSPlayer", "m_skybox3d.area");
		DT_CSPlayer.m_skybox3d.fog.enable = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.enable");
		DT_CSPlayer.m_skybox3d.fog.blend = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.blend");
		DT_CSPlayer.m_skybox3d.fog.dirPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.dirPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorPrimary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorPrimary");
		DT_CSPlayer.m_skybox3d.fog.colorSecondary = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.colorSecondary");
		DT_CSPlayer.m_skybox3d.fog.start = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.start");
		DT_CSPlayer.m_skybox3d.fog.end = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.end");
		DT_CSPlayer.m_skybox3d.fog.maxdensity = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.maxdensity");
		DT_CSPlayer.m_skybox3d.fog.HDRColorScale = Netvars.byName("DT_CSPlayer", "m_skybox3d.fog.HDRColorScale");
		DT_CSPlayer.m_audio.localSound[0] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[0]");
		DT_CSPlayer.m_audio.localSound[1] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[1]");
		DT_CSPlayer.m_audio.localSound[2] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[2]");
		DT_CSPlayer.m_audio.localSound[3] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[3]");
		DT_CSPlayer.m_audio.localSound[4] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[4]");
		DT_CSPlayer.m_audio.localSound[5] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[5]");
		DT_CSPlayer.m_audio.localSound[6] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[6]");
		DT_CSPlayer.m_audio.localSound[7] = Netvars.byName("DT_CSPlayer", "m_audio.localSound[7]");
		DT_CSPlayer.m_audio.soundscapeIndex = Netvars.byName("DT_CSPlayer", "m_audio.soundscapeIndex");
		DT_CSPlayer.m_audio.localBits = Netvars.byName("DT_CSPlayer", "m_audio.localBits");
		DT_CSPlayer.m_audio.entIndex = Netvars.byName("DT_CSPlayer", "m_audio.entIndex");
		DT_CSPlayer.m_vecViewOffset[0] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_vecViewOffset[1] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[1]");
		DT_CSPlayer.m_vecViewOffset[2] = Netvars.byName("DT_CSPlayer", "m_vecViewOffset[2]");
		DT_CSPlayer.m_flFriction = Netvars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = Netvars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = Netvars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = Netvars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = Netvars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity[0] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecVelocity[1] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[1]");
		DT_CSPlayer.m_vecVelocity[2] = Netvars.byName("DT_CSPlayer", "m_vecVelocity[2]");
		DT_CSPlayer.m_vecBaseVelocity = Netvars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = Netvars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = Netvars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = Netvars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = Netvars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = Netvars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = Netvars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = Netvars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = Netvars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = Netvars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = Netvars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = Netvars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = Netvars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = Netvars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = Netvars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = Netvars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = Netvars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = Netvars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = Netvars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = Netvars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = Netvars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = Netvars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = Netvars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = Netvars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = Netvars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = Netvars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = Netvars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = Netvars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = Netvars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = Netvars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = Netvars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = Netvars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = Netvars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = Netvars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = Netvars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = Netvars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = Netvars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = Netvars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel[0] = Netvars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = Netvars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = Netvars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = Netvars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = Netvars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = Netvars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = Netvars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = Netvars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_PlayerFog.m_hCtrl = Netvars.byName("DT_CSPlayer", "m_PlayerFog.m_hCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = Netvars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = Netvars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = Netvars.byName("DT_CSPlayer", "m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = Netvars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = Netvars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = Netvars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_flStamina = Netvars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = Netvars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = Netvars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = Netvars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = Netvars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = Netvars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = Netvars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = Netvars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = Netvars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = Netvars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_vecOrigin = Netvars.byName("DT_CSPlayer", "m_vecOrigin");
		DT_CSPlayer.m_vecOrigin[2] = Netvars.byName("DT_CSPlayer", "m_vecOrigin[2]");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = Netvars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = Netvars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles[0] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_angEyeAngles[1] = Netvars.byName("DT_CSPlayer", "m_angEyeAngles[1]");
		DT_CSPlayer.m_iAddonBits = Netvars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = Netvars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = Netvars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = Netvars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = Netvars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = Netvars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = Netvars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = Netvars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = Netvars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = Netvars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = Netvars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = Netvars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = Netvars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = Netvars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = Netvars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = Netvars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = Netvars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = Netvars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = Netvars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = Netvars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = Netvars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = Netvars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = Netvars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = Netvars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = Netvars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = Netvars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = Netvars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = Netvars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = Netvars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = Netvars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = Netvars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = Netvars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = Netvars.byName("DT_CSPlayer", "m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = Netvars.byName("DT_CSPlayer", "m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = Netvars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = Netvars.byName("DT_CSPlayer", "m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = Netvars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = Netvars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = Netvars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = Netvars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = Netvars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = Netvars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = Netvars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = Netvars.byName("DT_CSPlayer", "m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = Netvars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = Netvars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = Netvars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = Netvars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = Netvars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = Netvars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = Netvars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = Netvars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = Netvars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = Netvars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = Netvars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = Netvars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = Netvars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = Netvars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = Netvars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = Netvars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = Netvars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = Netvars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = Netvars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = Netvars.byName("DT_CSPlayer", "m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = Netvars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = Netvars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = Netvars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = Netvars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = Netvars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = Netvars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = Netvars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = Netvars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = Netvars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = Netvars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = Netvars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = Netvars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = Netvars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = Netvars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = Netvars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = Netvars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = Netvars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = Netvars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = Netvars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = Netvars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = Netvars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = Netvars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = Netvars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = Netvars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = Netvars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = Netvars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = Netvars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = Netvars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = Netvars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = Netvars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = Netvars.byName("DT_CSPlayer", "m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = Netvars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = Netvars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
	}
}