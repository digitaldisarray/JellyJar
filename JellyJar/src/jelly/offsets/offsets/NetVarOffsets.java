package jelly.offsets.offsets;

import jelly.offsets.netvars.NetVars;

public class NetVarOffsets {
	public static class DT_VGuiScreen {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_flWidth;
		public static long m_flHeight;
		public static long m_fScreenFlags;
		public static long m_nPanelName;
		public static long m_nAttachmentIndex;
		public static long m_nOverlayMaterial;
		public static long m_hPlayerOwner;
	}

	public static class DT_BasePlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_vecViewOffset;
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity;
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel;
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
	}

	public static class DT_CSPlayer {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
		public static long m_nSequence;
		public static long m_nForceBone;
		public static long m_vecForce;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nHitboxSet;
		public static long m_flModelScale;
		public static long m_flPoseParameter;
		public static long m_flPlaybackRate;
		public static long m_flEncodedController;
		public static long m_bClientSideAnimation;
		public static long m_bClientSideFrameReset;
		public static long m_bClientSideRagdoll;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_hLightingOrigin;
		public static long m_flCycle;
		public static long m_flFrozen;
		public static long m_ScaleType;
		public static long m_bSuppressAnimSounds;
		public static long m_nHighlightColorR;
		public static long m_nHighlightColorG;
		public static long m_nHighlightColorB;
		public static long m_flexWeight;
		public static long m_blinktoggle;
		public static long m_viewtarget;
		public static long m_flNextAttack;
		public static long m_hMyWeapons;
		public static long m_LastHitGroup;
		public static long m_hActiveWeapon;
		public static long m_flTimeOfLastInjury;
		public static long m_nRelativeDirectionOfLastInjury;
		public static long m_hMyWearables;
		public static long m_Local;
		public static long m_chAreaBits;
		public static long m_chAreaPortalBits;
		public static long m_iHideHUD;
		public static long m_flFOVRate;
		public static long m_bDucked;
		public static long m_bDucking;
		public static long m_flLastDuckTime;
		public static long m_bInDuckJump;
		public static long m_nDuckTimeMsecs;
		public static long m_nDuckJumpTimeMsecs;
		public static long m_nJumpTimeMsecs;
		public static long m_flFallVelocity;
		public static long m_viewPunchAngle;
		public static long m_aimPunchAngle;
		public static long m_aimPunchAngleVel;
		public static long m_bDrawViewmodel;
		public static long m_bWearingSuit;
		public static long m_bPoisoned;
		public static long m_flStepSize;
		public static long m_bAllowAutoMovement;
		public static long m_vecViewOffset;
		public static long m_flFriction;
		public static long m_fOnTarget;
		public static long m_nTickBase;
		public static long m_nNextThinkTick;
		public static long m_hLastWeapon;
		public static long m_vecVelocity;
		public static long m_vecBaseVelocity;
		public static long m_hConstraintEntity;
		public static long m_vecConstraintCenter;
		public static long m_flConstraintRadius;
		public static long m_flConstraintWidth;
		public static long m_flConstraintSpeedFactor;
		public static long m_bConstraintPastRadius;
		public static long m_flDeathTime;
		public static long m_flNextDecalTime;
		public static long m_fForceTeam;
		public static long m_flLaggedMovementValue;
		public static long m_hTonemapController;
		public static long pl;
		public static long deadflag;
		public static long m_iFOV;
		public static long m_iFOVStart;
		public static long m_flFOVTime;
		public static long m_iDefaultFOV;
		public static long m_hZoomOwner;
		public static long m_afPhysicsFlags;
		public static long m_hVehicle;
		public static long m_hUseEntity;
		public static long m_hGroundEntity;
		public static long m_iHealth;
		public static long m_lifeState;
		public static long m_iAmmo;
		public static long m_iBonusProgress;
		public static long m_iBonusChallenge;
		public static long m_flMaxspeed;
		public static long m_fFlags;
		public static long m_iObserverMode;
		public static long m_bActiveCameraMan;
		public static long m_bCameraManXRay;
		public static long m_bCameraManOverview;
		public static long m_bCameraManScoreBoard;
		public static long m_uCameraManGraphs;
		public static long m_iDeathPostEffect;
		public static long m_hObserverTarget;
		public static long m_hViewModel;
		public static long m_iCoachingTeam;
		public static long m_szLastPlaceName;
		public static long m_vecLadderNormal;
		public static long m_ladderSurfaceProps;
		public static long m_ubEFNoInterpParity;
		public static long m_hPostProcessCtrl;
		public static long m_hColorCorrectionCtrl;
		public static long m_vphysicsCollisionState;
		public static long m_hViewEntity;
		public static long m_bShouldDrawPlayerWhileUsingViewEntity;
		public static long m_flDuckAmount;
		public static long m_flDuckSpeed;
		public static long m_nWaterLevel;
		public static long m_flStamina;
		public static long m_iDirection;
		public static long m_iShotsFired;
		public static long m_nNumFastDucks;
		public static long m_bDuckOverride;
		public static long m_flVelocityModifier;
		public static long m_bPlayerDominated;
		public static long m_bPlayerDominatingMe;
		public static long m_iWeaponPurchasesThisRound;
		public static long m_unActiveQuestId;
		public static long m_nQuestProgressReason;
		public static long m_iWeaponPurchasesThisMatch;
		public static long m_EquippedLoadoutItemDefIndices;
		public static long m_iAddonBits;
		public static long m_iPrimaryAddon;
		public static long m_iSecondaryAddon;
		public static long m_iThrowGrenadeCounter;
		public static long m_bWaitForNoAttack;
		public static long m_bIsRespawningForDMBonus;
		public static long m_iPlayerState;
		public static long m_iAccount;
		public static long m_iStartAccount;
		public static long m_totalHitsOnServer;
		public static long m_bInBombZone;
		public static long m_bInBuyZone;
		public static long m_bInNoDefuseArea;
		public static long m_bKilledByTaser;
		public static long m_iMoveState;
		public static long m_iClass;
		public static long m_ArmorValue;
		public static long m_angEyeAngles;
		public static long m_bHasDefuser;
		public static long m_bNightVisionOn;
		public static long m_bHasNightVision;
		public static long m_bInHostageRescueZone;
		public static long m_bIsDefusing;
		public static long m_bIsGrabbingHostage;
		public static long m_iBlockingUseActionInProgress;
		public static long m_bIsScoped;
		public static long m_bIsWalking;
		public static long m_nIsAutoMounting;
		public static long m_bResumeZoom;
		public static long m_fImmuneToGunGameDamageTime;
		public static long m_bGunGameImmunity;
		public static long m_bHasMovedSinceSpawn;
		public static long m_bMadeFinalGunGameProgressiveKill;
		public static long m_iGunGameProgressiveWeaponIndex;
		public static long m_iNumGunGameTRKillPoints;
		public static long m_iNumGunGameKillsWithCurrentWeapon;
		public static long m_iNumRoundKills;
		public static long m_fMolotovUseTime;
		public static long m_fMolotovDamageTime;
		public static long m_szArmsModel;
		public static long m_hCarriedHostage;
		public static long m_hCarriedHostageProp;
		public static long m_bIsRescuing;
		public static long m_flGroundAccelLinearFracLastTime;
		public static long m_bCanMoveDuringFreezePeriod;
		public static long m_isCurrentGunGameLeader;
		public static long m_isCurrentGunGameTeamLeader;
		public static long m_flGuardianTooFarDistFrac;
		public static long m_flDetectedByEnemySensorTime;
		public static long m_bIsPlayerGhost;
		public static long m_iMatchStats_Kills;
		public static long m_iMatchStats_Damage;
		public static long m_iMatchStats_EquipmentValue;
		public static long m_iMatchStats_MoneySaved;
		public static long m_iMatchStats_KillReward;
		public static long m_iMatchStats_LiveTime;
		public static long m_iMatchStats_Deaths;
		public static long m_iMatchStats_Assists;
		public static long m_iMatchStats_HeadShotKills;
		public static long m_iMatchStats_Objective;
		public static long m_iMatchStats_CashEarned;
		public static long m_iMatchStats_UtilityDamage;
		public static long m_iMatchStats_EnemiesFlashed;
		public static long m_rank;
		public static long m_passiveItems;
		public static long m_bHasParachute;
		public static long m_unMusicID;
		public static long m_bHasHelmet;
		public static long m_bHasHeavyArmor;
		public static long m_nHeavyAssaultSuitCooldownRemaining;
		public static long m_flFlashDuration;
		public static long m_flFlashMaxAlpha;
		public static long m_iProgressBarDuration;
		public static long m_flProgressBarStartTime;
		public static long m_hRagdoll;
		public static long m_hPlayerPing;
		public static long m_cycleLatch;
		public static long m_unCurrentEquipmentValue;
		public static long m_unRoundStartEquipmentValue;
		public static long m_unFreezetimeEndEquipmentValue;
		public static long m_bIsControllingBot;
		public static long m_bHasControlledBotThisRound;
		public static long m_bCanControlObservedBot;
		public static long m_iControlledBotEntIndex;
		public static long m_vecAutomoveTargetEnd;
		public static long m_flAutoMoveStartTime;
		public static long m_flAutoMoveTargetTime;
		public static long m_bIsAssassinationTarget;
		public static long m_bHud_MiniScoreHidden;
		public static long m_bHud_RadarHidden;
		public static long m_nLastKillerIndex;
		public static long m_nLastConcurrentKilled;
		public static long m_nDeathCamMusic;
		public static long m_bIsHoldingLookAtWeapon;
		public static long m_bIsLookingAtWeapon;
		public static long m_iNumRoundKillsHeadshots;
		public static long m_unTotalRoundDamageDealt;
		public static long m_flLowerBodyYawTarget;
		public static long m_bStrafing;
		public static long m_flThirdpersonRecoil;
		public static long m_bHideTargetID;
		public static long m_bIsSpawnRappelling;
		public static long m_vecSpawnRappellingRopeOrigin;
		public static long m_nSurvivalTeam;
		public static long m_hSurvivalAssassinationTarget;
		public static long m_flHealthShotBoostExpirationTime;
		public static long m_flLastExoJumpTime;
		public static long m_vecPlayerPatchEconIndices;
		public static long m_iCrossHairID;
	}

	public static class DT_BaseEntity {
		public static long m_flAnimTime;
		public static long m_flSimulationTime;
		public static long m_cellbits;
		public static long m_cellX;
		public static long m_cellY;
		public static long m_cellZ;
		public static long m_vecOrigin;
		public static long m_angRotation;
		public static long m_nModelIndex;
		public static long m_fEffects;
		public static long m_nRenderMode;
		public static long m_nRenderFX;
		public static long m_clrRender;
		public static long m_iTeamNum;
		public static long m_iPendingTeamNum;
		public static long m_CollisionGroup;
		public static long m_flElasticity;
		public static long m_flShadowCastDistance;
		public static long m_hOwnerEntity;
		public static long m_hEffectEntity;
		public static long moveparent;
		public static long m_iParentAttachment;
		public static long m_iName;
		public static long m_Collision;
		public static long m_vecMins;
		public static long m_vecMaxs;
		public static long m_nSolidType;
		public static long m_usSolidFlags;
		public static long m_nSurroundType;
		public static long m_triggerBloat;
		public static long m_vecSpecifiedSurroundingMins;
		public static long m_vecSpecifiedSurroundingMaxs;
		public static long m_iTextureFrameIndex;
		public static long m_bSimulatedEveryTick;
		public static long m_bAnimatedEveryTick;
		public static long m_bAlternateSorting;
		public static long m_bSpotted;
		public static long m_bSpottedBy;
		public static long m_bSpottedByMask;
		public static long m_bIsAutoaimTarget;
		public static long m_fadeMinDist;
		public static long m_fadeMaxDist;
		public static long m_flFadeScale;
		public static long m_nMinCPULevel;
		public static long m_nMaxCPULevel;
		public static long m_nMinGPULevel;
		public static long m_nMaxGPULevel;
		public static long m_flUseLookAtAngle;
		public static long m_flLastMadeNoiseTime;
		public static long m_flMaxFallVelocity;
		public static long m_bEligibleForScreenHighlight;
	}

	public static class DT_BaseViewModel {
		public static long m_nModelIndex;
		public static long m_hWeapon;
		public static long m_nSkin;
		public static long m_nBody;
		public static long m_nSequence;
		public static long m_nViewModelIndex;
		public static long m_flPlaybackRate;
		public static long m_fEffects;
		public static long m_nAnimationParity;
		public static long m_hOwner;
		public static long m_nNewSequenceParity;
		public static long m_nResetEventsParity;
		public static long m_nMuzzleFlashParity;
		public static long m_bShouldIgnoreOffsetAndAccuracy;
	}

	
	// TODO: Remove junk that isn't needed
	public static void load() {
		DT_VGuiScreen.m_flAnimTime = NetVars.byName("DT_VGuiScreen", "m_flAnimTime");
		DT_VGuiScreen.m_flSimulationTime = NetVars.byName("DT_VGuiScreen", "m_flSimulationTime");
		DT_VGuiScreen.m_cellbits = NetVars.byName("DT_VGuiScreen", "m_cellbits");
		DT_VGuiScreen.m_cellX = NetVars.byName("DT_VGuiScreen", "m_cellX");
		DT_VGuiScreen.m_cellY = NetVars.byName("DT_VGuiScreen", "m_cellY");
		DT_VGuiScreen.m_cellZ = NetVars.byName("DT_VGuiScreen", "m_cellZ");
		DT_VGuiScreen.m_vecOrigin = NetVars.byName("DT_VGuiScreen", "m_vecOrigin");
		DT_VGuiScreen.m_angRotation = NetVars.byName("DT_VGuiScreen", "m_angRotation");
		DT_VGuiScreen.m_nModelIndex = NetVars.byName("DT_VGuiScreen", "m_nModelIndex");
		DT_VGuiScreen.m_fEffects = NetVars.byName("DT_VGuiScreen", "m_fEffects");
		DT_VGuiScreen.m_nRenderMode = NetVars.byName("DT_VGuiScreen", "m_nRenderMode");
		DT_VGuiScreen.m_nRenderFX = NetVars.byName("DT_VGuiScreen", "m_nRenderFX");
		DT_VGuiScreen.m_clrRender = NetVars.byName("DT_VGuiScreen", "m_clrRender");
		DT_VGuiScreen.m_iTeamNum = NetVars.byName("DT_VGuiScreen", "m_iTeamNum");
		DT_VGuiScreen.m_iPendingTeamNum = NetVars.byName("DT_VGuiScreen", "m_iPendingTeamNum");
		DT_VGuiScreen.m_CollisionGroup = NetVars.byName("DT_VGuiScreen", "m_CollisionGroup");
		DT_VGuiScreen.m_flElasticity = NetVars.byName("DT_VGuiScreen", "m_flElasticity");
		DT_VGuiScreen.m_flShadowCastDistance = NetVars.byName("DT_VGuiScreen", "m_flShadowCastDistance");
		DT_VGuiScreen.m_hOwnerEntity = NetVars.byName("DT_VGuiScreen", "m_hOwnerEntity");
		DT_VGuiScreen.m_hEffectEntity = NetVars.byName("DT_VGuiScreen", "m_hEffectEntity");
		DT_VGuiScreen.moveparent = NetVars.byName("DT_VGuiScreen", "moveparent");
		DT_VGuiScreen.m_iParentAttachment = NetVars.byName("DT_VGuiScreen", "m_iParentAttachment");
		DT_VGuiScreen.m_iName = NetVars.byName("DT_VGuiScreen", "m_iName");
		DT_VGuiScreen.m_Collision = NetVars.byName("DT_VGuiScreen", "m_Collision");
		DT_VGuiScreen.m_vecMins = NetVars.byName("DT_VGuiScreen", "m_vecMins");
		DT_VGuiScreen.m_vecMaxs = NetVars.byName("DT_VGuiScreen", "m_vecMaxs");
		DT_VGuiScreen.m_nSolidType = NetVars.byName("DT_VGuiScreen", "m_nSolidType");
		DT_VGuiScreen.m_usSolidFlags = NetVars.byName("DT_VGuiScreen", "m_usSolidFlags");
		DT_VGuiScreen.m_nSurroundType = NetVars.byName("DT_VGuiScreen", "m_nSurroundType");
		DT_VGuiScreen.m_triggerBloat = NetVars.byName("DT_VGuiScreen", "m_triggerBloat");
		DT_VGuiScreen.m_vecSpecifiedSurroundingMins = NetVars.byName("DT_VGuiScreen", "m_vecSpecifiedSurroundingMins");
		DT_VGuiScreen.m_vecSpecifiedSurroundingMaxs = NetVars.byName("DT_VGuiScreen", "m_vecSpecifiedSurroundingMaxs");
		DT_VGuiScreen.m_iTextureFrameIndex = NetVars.byName("DT_VGuiScreen", "m_iTextureFrameIndex");
		DT_VGuiScreen.m_bSimulatedEveryTick = NetVars.byName("DT_VGuiScreen", "m_bSimulatedEveryTick");
		DT_VGuiScreen.m_bAnimatedEveryTick = NetVars.byName("DT_VGuiScreen", "m_bAnimatedEveryTick");
		DT_VGuiScreen.m_bAlternateSorting = NetVars.byName("DT_VGuiScreen", "m_bAlternateSorting");
		DT_VGuiScreen.m_bSpotted = NetVars.byName("DT_VGuiScreen", "m_bSpotted");
		DT_VGuiScreen.m_bSpottedBy = NetVars.byName("DT_VGuiScreen", "m_bSpottedBy");
		DT_VGuiScreen.m_bSpottedByMask = NetVars.byName("DT_VGuiScreen", "m_bSpottedByMask");
		DT_VGuiScreen.m_bIsAutoaimTarget = NetVars.byName("DT_VGuiScreen", "m_bIsAutoaimTarget");
		DT_VGuiScreen.m_fadeMinDist = NetVars.byName("DT_VGuiScreen", "m_fadeMinDist");
		DT_VGuiScreen.m_fadeMaxDist = NetVars.byName("DT_VGuiScreen", "m_fadeMaxDist");
		DT_VGuiScreen.m_flFadeScale = NetVars.byName("DT_VGuiScreen", "m_flFadeScale");
		DT_VGuiScreen.m_nMinCPULevel = NetVars.byName("DT_VGuiScreen", "m_nMinCPULevel");
		DT_VGuiScreen.m_nMaxCPULevel = NetVars.byName("DT_VGuiScreen", "m_nMaxCPULevel");
		DT_VGuiScreen.m_nMinGPULevel = NetVars.byName("DT_VGuiScreen", "m_nMinGPULevel");
		DT_VGuiScreen.m_nMaxGPULevel = NetVars.byName("DT_VGuiScreen", "m_nMaxGPULevel");
		DT_VGuiScreen.m_flUseLookAtAngle = NetVars.byName("DT_VGuiScreen", "m_flUseLookAtAngle");
		DT_VGuiScreen.m_flLastMadeNoiseTime = NetVars.byName("DT_VGuiScreen", "m_flLastMadeNoiseTime");
		DT_VGuiScreen.m_flMaxFallVelocity = NetVars.byName("DT_VGuiScreen", "m_flMaxFallVelocity");
		DT_VGuiScreen.m_bEligibleForScreenHighlight = NetVars.byName("DT_VGuiScreen", "m_bEligibleForScreenHighlight");
		DT_VGuiScreen.m_flWidth = NetVars.byName("DT_VGuiScreen", "m_flWidth");
		DT_VGuiScreen.m_flHeight = NetVars.byName("DT_VGuiScreen", "m_flHeight");
		DT_VGuiScreen.m_fScreenFlags = NetVars.byName("DT_VGuiScreen", "m_fScreenFlags");
		DT_VGuiScreen.m_nPanelName = NetVars.byName("DT_VGuiScreen", "m_nPanelName");
		DT_VGuiScreen.m_nAttachmentIndex = NetVars.byName("DT_VGuiScreen", "m_nAttachmentIndex");
		DT_VGuiScreen.m_nOverlayMaterial = NetVars.byName("DT_VGuiScreen", "m_nOverlayMaterial");
		DT_VGuiScreen.m_hPlayerOwner = NetVars.byName("DT_VGuiScreen", "m_hPlayerOwner");
		DT_BasePlayer.m_flAnimTime = NetVars.byName("DT_BasePlayer", "m_flAnimTime");
		DT_BasePlayer.m_flSimulationTime = NetVars.byName("DT_BasePlayer", "m_flSimulationTime");
		DT_BasePlayer.m_cellbits = NetVars.byName("DT_BasePlayer", "m_cellbits");
		DT_BasePlayer.m_cellX = NetVars.byName("DT_BasePlayer", "m_cellX");
		DT_BasePlayer.m_cellY = NetVars.byName("DT_BasePlayer", "m_cellY");
		DT_BasePlayer.m_cellZ = NetVars.byName("DT_BasePlayer", "m_cellZ");
		DT_BasePlayer.m_vecOrigin = NetVars.byName("DT_BasePlayer", "m_vecOrigin");
		DT_BasePlayer.m_angRotation = NetVars.byName("DT_BasePlayer", "m_angRotation");
		DT_BasePlayer.m_nModelIndex = NetVars.byName("DT_BasePlayer", "m_nModelIndex");
		DT_BasePlayer.m_fEffects = NetVars.byName("DT_BasePlayer", "m_fEffects");
		DT_BasePlayer.m_nRenderMode = NetVars.byName("DT_BasePlayer", "m_nRenderMode");
		DT_BasePlayer.m_nRenderFX = NetVars.byName("DT_BasePlayer", "m_nRenderFX");
		DT_BasePlayer.m_clrRender = NetVars.byName("DT_BasePlayer", "m_clrRender");
		DT_BasePlayer.m_iTeamNum = NetVars.byName("DT_BasePlayer", "m_iTeamNum");
		DT_BasePlayer.m_iPendingTeamNum = NetVars.byName("DT_BasePlayer", "m_iPendingTeamNum");
		DT_BasePlayer.m_CollisionGroup = NetVars.byName("DT_BasePlayer", "m_CollisionGroup");
		DT_BasePlayer.m_flElasticity = NetVars.byName("DT_BasePlayer", "m_flElasticity");
		DT_BasePlayer.m_flShadowCastDistance = NetVars.byName("DT_BasePlayer", "m_flShadowCastDistance");
		DT_BasePlayer.m_hOwnerEntity = NetVars.byName("DT_BasePlayer", "m_hOwnerEntity");
		DT_BasePlayer.m_hEffectEntity = NetVars.byName("DT_BasePlayer", "m_hEffectEntity");
		DT_BasePlayer.moveparent = NetVars.byName("DT_BasePlayer", "moveparent");
		DT_BasePlayer.m_iParentAttachment = NetVars.byName("DT_BasePlayer", "m_iParentAttachment");
		DT_BasePlayer.m_iName = NetVars.byName("DT_BasePlayer", "m_iName");
		DT_BasePlayer.m_Collision = NetVars.byName("DT_BasePlayer", "m_Collision");
		DT_BasePlayer.m_vecMins = NetVars.byName("DT_BasePlayer", "m_vecMins");
		DT_BasePlayer.m_vecMaxs = NetVars.byName("DT_BasePlayer", "m_vecMaxs");
		DT_BasePlayer.m_nSolidType = NetVars.byName("DT_BasePlayer", "m_nSolidType");
		DT_BasePlayer.m_usSolidFlags = NetVars.byName("DT_BasePlayer", "m_usSolidFlags");
		DT_BasePlayer.m_nSurroundType = NetVars.byName("DT_BasePlayer", "m_nSurroundType");
		DT_BasePlayer.m_triggerBloat = NetVars.byName("DT_BasePlayer", "m_triggerBloat");
		DT_BasePlayer.m_vecSpecifiedSurroundingMins = NetVars.byName("DT_BasePlayer", "m_vecSpecifiedSurroundingMins");
		DT_BasePlayer.m_vecSpecifiedSurroundingMaxs = NetVars.byName("DT_BasePlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_BasePlayer.m_iTextureFrameIndex = NetVars.byName("DT_BasePlayer", "m_iTextureFrameIndex");
		DT_BasePlayer.m_bSimulatedEveryTick = NetVars.byName("DT_BasePlayer", "m_bSimulatedEveryTick");
		DT_BasePlayer.m_bAnimatedEveryTick = NetVars.byName("DT_BasePlayer", "m_bAnimatedEveryTick");
		DT_BasePlayer.m_bAlternateSorting = NetVars.byName("DT_BasePlayer", "m_bAlternateSorting");
		DT_BasePlayer.m_bSpotted = NetVars.byName("DT_BasePlayer", "m_bSpotted");
		DT_BasePlayer.m_bSpottedBy = NetVars.byName("DT_BasePlayer", "m_bSpottedBy");
		DT_BasePlayer.m_bSpottedByMask = NetVars.byName("DT_BasePlayer", "m_bSpottedByMask");
		DT_BasePlayer.m_bIsAutoaimTarget = NetVars.byName("DT_BasePlayer", "m_bIsAutoaimTarget");
		DT_BasePlayer.m_fadeMinDist = NetVars.byName("DT_BasePlayer", "m_fadeMinDist");
		DT_BasePlayer.m_fadeMaxDist = NetVars.byName("DT_BasePlayer", "m_fadeMaxDist");
		DT_BasePlayer.m_flFadeScale = NetVars.byName("DT_BasePlayer", "m_flFadeScale");
		DT_BasePlayer.m_nMinCPULevel = NetVars.byName("DT_BasePlayer", "m_nMinCPULevel");
		DT_BasePlayer.m_nMaxCPULevel = NetVars.byName("DT_BasePlayer", "m_nMaxCPULevel");
		DT_BasePlayer.m_nMinGPULevel = NetVars.byName("DT_BasePlayer", "m_nMinGPULevel");
		DT_BasePlayer.m_nMaxGPULevel = NetVars.byName("DT_BasePlayer", "m_nMaxGPULevel");
		DT_BasePlayer.m_flUseLookAtAngle = NetVars.byName("DT_BasePlayer", "m_flUseLookAtAngle");
		DT_BasePlayer.m_flLastMadeNoiseTime = NetVars.byName("DT_BasePlayer", "m_flLastMadeNoiseTime");
		DT_BasePlayer.m_flMaxFallVelocity = NetVars.byName("DT_BasePlayer", "m_flMaxFallVelocity");
		DT_BasePlayer.m_bEligibleForScreenHighlight = NetVars.byName("DT_BasePlayer", "m_bEligibleForScreenHighlight");
		DT_BasePlayer.m_nSequence = NetVars.byName("DT_BasePlayer", "m_nSequence");
		DT_BasePlayer.m_nForceBone = NetVars.byName("DT_BasePlayer", "m_nForceBone");
		DT_BasePlayer.m_vecForce = NetVars.byName("DT_BasePlayer", "m_vecForce");
		DT_BasePlayer.m_nSkin = NetVars.byName("DT_BasePlayer", "m_nSkin");
		DT_BasePlayer.m_nBody = NetVars.byName("DT_BasePlayer", "m_nBody");
		DT_BasePlayer.m_nHitboxSet = NetVars.byName("DT_BasePlayer", "m_nHitboxSet");
		DT_BasePlayer.m_flModelScale = NetVars.byName("DT_BasePlayer", "m_flModelScale");
		DT_BasePlayer.m_flPoseParameter = NetVars.byName("DT_BasePlayer", "m_flPoseParameter");
		DT_BasePlayer.m_flPlaybackRate = NetVars.byName("DT_BasePlayer", "m_flPlaybackRate");
		DT_BasePlayer.m_flEncodedController = NetVars.byName("DT_BasePlayer", "m_flEncodedController");
		DT_BasePlayer.m_bClientSideAnimation = NetVars.byName("DT_BasePlayer", "m_bClientSideAnimation");
		DT_BasePlayer.m_bClientSideFrameReset = NetVars.byName("DT_BasePlayer", "m_bClientSideFrameReset");
		DT_BasePlayer.m_bClientSideRagdoll = NetVars.byName("DT_BasePlayer", "m_bClientSideRagdoll");
		DT_BasePlayer.m_nNewSequenceParity = NetVars.byName("DT_BasePlayer", "m_nNewSequenceParity");
		DT_BasePlayer.m_nResetEventsParity = NetVars.byName("DT_BasePlayer", "m_nResetEventsParity");
		DT_BasePlayer.m_nMuzzleFlashParity = NetVars.byName("DT_BasePlayer", "m_nMuzzleFlashParity");
		DT_BasePlayer.m_hLightingOrigin = NetVars.byName("DT_BasePlayer", "m_hLightingOrigin");
		DT_BasePlayer.m_flCycle = NetVars.byName("DT_BasePlayer", "m_flCycle");
		DT_BasePlayer.m_flFrozen = NetVars.byName("DT_BasePlayer", "m_flFrozen");
		DT_BasePlayer.m_ScaleType = NetVars.byName("DT_BasePlayer", "m_ScaleType");
		DT_BasePlayer.m_bSuppressAnimSounds = NetVars.byName("DT_BasePlayer", "m_bSuppressAnimSounds");
		DT_BasePlayer.m_nHighlightColorR = NetVars.byName("DT_BasePlayer", "m_nHighlightColorR");
		DT_BasePlayer.m_nHighlightColorG = NetVars.byName("DT_BasePlayer", "m_nHighlightColorG");
		DT_BasePlayer.m_nHighlightColorB = NetVars.byName("DT_BasePlayer", "m_nHighlightColorB");
		DT_BasePlayer.m_flexWeight = NetVars.byName("DT_BasePlayer", "m_flexWeight");
		DT_BasePlayer.m_blinktoggle = NetVars.byName("DT_BasePlayer", "m_blinktoggle");
		DT_BasePlayer.m_viewtarget = NetVars.byName("DT_BasePlayer", "m_viewtarget");
		DT_BasePlayer.m_flNextAttack = NetVars.byName("DT_BasePlayer", "m_flNextAttack");
		DT_BasePlayer.m_hMyWeapons = NetVars.byName("DT_BasePlayer", "m_hMyWeapons");
		DT_BasePlayer.m_LastHitGroup = NetVars.byName("DT_BasePlayer", "m_LastHitGroup");
		DT_BasePlayer.m_hActiveWeapon = NetVars.byName("DT_BasePlayer", "m_hActiveWeapon");
		DT_BasePlayer.m_flTimeOfLastInjury = NetVars.byName("DT_BasePlayer", "m_flTimeOfLastInjury");
		DT_BasePlayer.m_nRelativeDirectionOfLastInjury = NetVars.byName("DT_BasePlayer",
				"m_nRelativeDirectionOfLastInjury");
		DT_BasePlayer.m_hMyWearables = NetVars.byName("DT_BasePlayer", "m_hMyWearables");
		DT_BasePlayer.m_Local = NetVars.byName("DT_BasePlayer", "m_Local");
		DT_BasePlayer.m_chAreaBits = NetVars.byName("DT_BasePlayer", "m_chAreaBits");
		DT_BasePlayer.m_chAreaPortalBits = NetVars.byName("DT_BasePlayer", "m_chAreaPortalBits");
		DT_BasePlayer.m_iHideHUD = NetVars.byName("DT_BasePlayer", "m_iHideHUD");
		DT_BasePlayer.m_flFOVRate = NetVars.byName("DT_BasePlayer", "m_flFOVRate");
		DT_BasePlayer.m_bDucked = NetVars.byName("DT_BasePlayer", "m_bDucked");
		DT_BasePlayer.m_bDucking = NetVars.byName("DT_BasePlayer", "m_bDucking");
		DT_BasePlayer.m_flLastDuckTime = NetVars.byName("DT_BasePlayer", "m_flLastDuckTime");
		DT_BasePlayer.m_bInDuckJump = NetVars.byName("DT_BasePlayer", "m_bInDuckJump");
		DT_BasePlayer.m_nDuckTimeMsecs = NetVars.byName("DT_BasePlayer", "m_nDuckTimeMsecs");
		DT_BasePlayer.m_nDuckJumpTimeMsecs = NetVars.byName("DT_BasePlayer", "m_nDuckJumpTimeMsecs");
		DT_BasePlayer.m_nJumpTimeMsecs = NetVars.byName("DT_BasePlayer", "m_nJumpTimeMsecs");
		DT_BasePlayer.m_flFallVelocity = NetVars.byName("DT_BasePlayer", "m_flFallVelocity");
		DT_BasePlayer.m_viewPunchAngle = NetVars.byName("DT_BasePlayer", "m_viewPunchAngle");
		DT_BasePlayer.m_aimPunchAngle = NetVars.byName("DT_BasePlayer", "m_aimPunchAngle");
		DT_BasePlayer.m_aimPunchAngleVel = NetVars.byName("DT_BasePlayer", "m_aimPunchAngleVel");
		DT_BasePlayer.m_bDrawViewmodel = NetVars.byName("DT_BasePlayer", "m_bDrawViewmodel");
		DT_BasePlayer.m_bWearingSuit = NetVars.byName("DT_BasePlayer", "m_bWearingSuit");
		DT_BasePlayer.m_bPoisoned = NetVars.byName("DT_BasePlayer", "m_bPoisoned");
		DT_BasePlayer.m_flStepSize = NetVars.byName("DT_BasePlayer", "m_flStepSize");
		DT_BasePlayer.m_bAllowAutoMovement = NetVars.byName("DT_BasePlayer", "m_bAllowAutoMovement");
		DT_BasePlayer.m_vecViewOffset = NetVars.byName("DT_BasePlayer", "m_vecViewOffset[0]");
		DT_BasePlayer.m_flFriction = NetVars.byName("DT_BasePlayer", "m_flFriction");
		DT_BasePlayer.m_fOnTarget = NetVars.byName("DT_BasePlayer", "m_fOnTarget");
		DT_BasePlayer.m_nTickBase = NetVars.byName("DT_BasePlayer", "m_nTickBase");
		DT_BasePlayer.m_nNextThinkTick = NetVars.byName("DT_BasePlayer", "m_nNextThinkTick");
		DT_BasePlayer.m_hLastWeapon = NetVars.byName("DT_BasePlayer", "m_hLastWeapon");
		DT_BasePlayer.m_vecVelocity = NetVars.byName("DT_BasePlayer", "m_vecVelocity[0]");
		DT_BasePlayer.m_vecBaseVelocity = NetVars.byName("DT_BasePlayer", "m_vecBaseVelocity");
		DT_BasePlayer.m_hConstraintEntity = NetVars.byName("DT_BasePlayer", "m_hConstraintEntity");
		DT_BasePlayer.m_vecConstraintCenter = NetVars.byName("DT_BasePlayer", "m_vecConstraintCenter");
		DT_BasePlayer.m_flConstraintRadius = NetVars.byName("DT_BasePlayer", "m_flConstraintRadius");
		DT_BasePlayer.m_flConstraintWidth = NetVars.byName("DT_BasePlayer", "m_flConstraintWidth");
		DT_BasePlayer.m_flConstraintSpeedFactor = NetVars.byName("DT_BasePlayer", "m_flConstraintSpeedFactor");
		DT_BasePlayer.m_bConstraintPastRadius = NetVars.byName("DT_BasePlayer", "m_bConstraintPastRadius");
		DT_BasePlayer.m_flDeathTime = NetVars.byName("DT_BasePlayer", "m_flDeathTime");
		DT_BasePlayer.m_flNextDecalTime = NetVars.byName("DT_BasePlayer", "m_flNextDecalTime");
		DT_BasePlayer.m_fForceTeam = NetVars.byName("DT_BasePlayer", "m_fForceTeam");
		DT_BasePlayer.m_flLaggedMovementValue = NetVars.byName("DT_BasePlayer", "m_flLaggedMovementValue");
		DT_BasePlayer.m_hTonemapController = NetVars.byName("DT_BasePlayer", "m_hTonemapController");
		DT_BasePlayer.pl = NetVars.byName("DT_BasePlayer", "pl");
		DT_BasePlayer.deadflag = NetVars.byName("DT_BasePlayer", "deadflag");
		DT_BasePlayer.m_iFOV = NetVars.byName("DT_BasePlayer", "m_iFOV");
		DT_BasePlayer.m_iFOVStart = NetVars.byName("DT_BasePlayer", "m_iFOVStart");
		DT_BasePlayer.m_flFOVTime = NetVars.byName("DT_BasePlayer", "m_flFOVTime");
		DT_BasePlayer.m_iDefaultFOV = NetVars.byName("DT_BasePlayer", "m_iDefaultFOV");
		DT_BasePlayer.m_hZoomOwner = NetVars.byName("DT_BasePlayer", "m_hZoomOwner");
		DT_BasePlayer.m_afPhysicsFlags = NetVars.byName("DT_BasePlayer", "m_afPhysicsFlags");
		DT_BasePlayer.m_hVehicle = NetVars.byName("DT_BasePlayer", "m_hVehicle");
		DT_BasePlayer.m_hUseEntity = NetVars.byName("DT_BasePlayer", "m_hUseEntity");
		DT_BasePlayer.m_hGroundEntity = NetVars.byName("DT_BasePlayer", "m_hGroundEntity");
		DT_BasePlayer.m_iHealth = NetVars.byName("DT_BasePlayer", "m_iHealth");
		DT_BasePlayer.m_lifeState = NetVars.byName("DT_BasePlayer", "m_lifeState");
		DT_BasePlayer.m_iAmmo = NetVars.byName("DT_BasePlayer", "m_iAmmo");
		DT_BasePlayer.m_iBonusProgress = NetVars.byName("DT_BasePlayer", "m_iBonusProgress");
		DT_BasePlayer.m_iBonusChallenge = NetVars.byName("DT_BasePlayer", "m_iBonusChallenge");
		DT_BasePlayer.m_flMaxspeed = NetVars.byName("DT_BasePlayer", "m_flMaxspeed");
		DT_BasePlayer.m_fFlags = NetVars.byName("DT_BasePlayer", "m_fFlags");
		DT_BasePlayer.m_iObserverMode = NetVars.byName("DT_BasePlayer", "m_iObserverMode");
		DT_BasePlayer.m_bActiveCameraMan = NetVars.byName("DT_BasePlayer", "m_bActiveCameraMan");
		DT_BasePlayer.m_bCameraManXRay = NetVars.byName("DT_BasePlayer", "m_bCameraManXRay");
		DT_BasePlayer.m_bCameraManOverview = NetVars.byName("DT_BasePlayer", "m_bCameraManOverview");
		DT_BasePlayer.m_bCameraManScoreBoard = NetVars.byName("DT_BasePlayer", "m_bCameraManScoreBoard");
		DT_BasePlayer.m_uCameraManGraphs = NetVars.byName("DT_BasePlayer", "m_uCameraManGraphs");
		DT_BasePlayer.m_iDeathPostEffect = NetVars.byName("DT_BasePlayer", "m_iDeathPostEffect");
		DT_BasePlayer.m_hObserverTarget = NetVars.byName("DT_BasePlayer", "m_hObserverTarget");
		DT_BasePlayer.m_hViewModel = NetVars.byName("DT_BasePlayer", "m_hViewModel[0]");
		DT_BasePlayer.m_iCoachingTeam = NetVars.byName("DT_BasePlayer", "m_iCoachingTeam");
		DT_BasePlayer.m_szLastPlaceName = NetVars.byName("DT_BasePlayer", "m_szLastPlaceName");
		DT_BasePlayer.m_vecLadderNormal = NetVars.byName("DT_BasePlayer", "m_vecLadderNormal");
		DT_BasePlayer.m_ladderSurfaceProps = NetVars.byName("DT_BasePlayer", "m_ladderSurfaceProps");
		DT_BasePlayer.m_ubEFNoInterpParity = NetVars.byName("DT_BasePlayer", "m_ubEFNoInterpParity");
		DT_BasePlayer.m_hPostProcessCtrl = NetVars.byName("DT_BasePlayer", "m_hPostProcessCtrl");
		DT_BasePlayer.m_hColorCorrectionCtrl = NetVars.byName("DT_BasePlayer", "m_hColorCorrectionCtrl");
		DT_BasePlayer.m_vphysicsCollisionState = NetVars.byName("DT_BasePlayer", "m_vphysicsCollisionState");
		DT_BasePlayer.m_hViewEntity = NetVars.byName("DT_BasePlayer", "m_hViewEntity");
		DT_BasePlayer.m_bShouldDrawPlayerWhileUsingViewEntity = NetVars.byName("DT_BasePlayer",
				"m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_BasePlayer.m_flDuckAmount = NetVars.byName("DT_BasePlayer", "m_flDuckAmount");
		DT_BasePlayer.m_flDuckSpeed = NetVars.byName("DT_BasePlayer", "m_flDuckSpeed");
		DT_BasePlayer.m_nWaterLevel = NetVars.byName("DT_BasePlayer", "m_nWaterLevel");
		DT_BaseEntity.m_flAnimTime = NetVars.byName("DT_BaseEntity", "m_flAnimTime");
		DT_BaseEntity.m_flSimulationTime = NetVars.byName("DT_BaseEntity", "m_flSimulationTime");
		DT_BaseEntity.m_cellbits = NetVars.byName("DT_BaseEntity", "m_cellbits");
		DT_BaseEntity.m_cellX = NetVars.byName("DT_BaseEntity", "m_cellX");
		DT_BaseEntity.m_cellY = NetVars.byName("DT_BaseEntity", "m_cellY");
		DT_BaseEntity.m_cellZ = NetVars.byName("DT_BaseEntity", "m_cellZ");
		DT_BaseEntity.m_vecOrigin = NetVars.byName("DT_BaseEntity", "m_vecOrigin");
		DT_BaseEntity.m_angRotation = NetVars.byName("DT_BaseEntity", "m_angRotation");
		DT_BaseEntity.m_nModelIndex = NetVars.byName("DT_BaseEntity", "m_nModelIndex");
		DT_BaseEntity.m_fEffects = NetVars.byName("DT_BaseEntity", "m_fEffects");
		DT_BaseEntity.m_nRenderMode = NetVars.byName("DT_BaseEntity", "m_nRenderMode");
		DT_BaseEntity.m_nRenderFX = NetVars.byName("DT_BaseEntity", "m_nRenderFX");
		DT_BaseEntity.m_clrRender = NetVars.byName("DT_BaseEntity", "m_clrRender");
		DT_BaseEntity.m_iTeamNum = NetVars.byName("DT_BaseEntity", "m_iTeamNum");
		DT_BaseEntity.m_iPendingTeamNum = NetVars.byName("DT_BaseEntity", "m_iPendingTeamNum");
		DT_BaseEntity.m_CollisionGroup = NetVars.byName("DT_BaseEntity", "m_CollisionGroup");
		DT_BaseEntity.m_flElasticity = NetVars.byName("DT_BaseEntity", "m_flElasticity");
		DT_BaseEntity.m_flShadowCastDistance = NetVars.byName("DT_BaseEntity", "m_flShadowCastDistance");
		DT_BaseEntity.m_hOwnerEntity = NetVars.byName("DT_BaseEntity", "m_hOwnerEntity");
		DT_BaseEntity.m_hEffectEntity = NetVars.byName("DT_BaseEntity", "m_hEffectEntity");
		DT_BaseEntity.moveparent = NetVars.byName("DT_BaseEntity", "moveparent");
		DT_BaseEntity.m_iParentAttachment = NetVars.byName("DT_BaseEntity", "m_iParentAttachment");
		DT_BaseEntity.m_iName = NetVars.byName("DT_BaseEntity", "m_iName");
		DT_BaseEntity.m_Collision = NetVars.byName("DT_BaseEntity", "m_Collision");
		DT_BaseEntity.m_vecMins = NetVars.byName("DT_BaseEntity", "m_vecMins");
		DT_BaseEntity.m_vecMaxs = NetVars.byName("DT_BaseEntity", "m_vecMaxs");
		DT_BaseEntity.m_nSolidType = NetVars.byName("DT_BaseEntity", "m_nSolidType");
		DT_BaseEntity.m_usSolidFlags = NetVars.byName("DT_BaseEntity", "m_usSolidFlags");
		DT_BaseEntity.m_nSurroundType = NetVars.byName("DT_BaseEntity", "m_nSurroundType");
		DT_BaseEntity.m_triggerBloat = NetVars.byName("DT_BaseEntity", "m_triggerBloat");
		DT_BaseEntity.m_vecSpecifiedSurroundingMins = NetVars.byName("DT_BaseEntity", "m_vecSpecifiedSurroundingMins");
		DT_BaseEntity.m_vecSpecifiedSurroundingMaxs = NetVars.byName("DT_BaseEntity", "m_vecSpecifiedSurroundingMaxs");
		DT_BaseEntity.m_iTextureFrameIndex = NetVars.byName("DT_BaseEntity", "m_iTextureFrameIndex");
		DT_BaseEntity.m_bSimulatedEveryTick = NetVars.byName("DT_BaseEntity", "m_bSimulatedEveryTick");
		DT_BaseEntity.m_bAnimatedEveryTick = NetVars.byName("DT_BaseEntity", "m_bAnimatedEveryTick");
		DT_BaseEntity.m_bAlternateSorting = NetVars.byName("DT_BaseEntity", "m_bAlternateSorting");
		DT_BaseEntity.m_bSpotted = NetVars.byName("DT_BaseEntity", "m_bSpotted");
		DT_BaseEntity.m_bSpottedBy = NetVars.byName("DT_BaseEntity", "m_bSpottedBy");
		DT_BaseEntity.m_bSpottedByMask = NetVars.byName("DT_BaseEntity", "m_bSpottedByMask");
		DT_BaseEntity.m_bIsAutoaimTarget = NetVars.byName("DT_BaseEntity", "m_bIsAutoaimTarget");
		DT_BaseEntity.m_fadeMinDist = NetVars.byName("DT_BaseEntity", "m_fadeMinDist");
		DT_BaseEntity.m_fadeMaxDist = NetVars.byName("DT_BaseEntity", "m_fadeMaxDist");
		DT_BaseEntity.m_flFadeScale = NetVars.byName("DT_BaseEntity", "m_flFadeScale");
		DT_BaseEntity.m_nMinCPULevel = NetVars.byName("DT_BaseEntity", "m_nMinCPULevel");
		DT_BaseEntity.m_nMaxCPULevel = NetVars.byName("DT_BaseEntity", "m_nMaxCPULevel");
		DT_BaseEntity.m_nMinGPULevel = NetVars.byName("DT_BaseEntity", "m_nMinGPULevel");
		DT_BaseEntity.m_nMaxGPULevel = NetVars.byName("DT_BaseEntity", "m_nMaxGPULevel");
		DT_BaseEntity.m_flUseLookAtAngle = NetVars.byName("DT_BaseEntity", "m_flUseLookAtAngle");
		DT_BaseEntity.m_flLastMadeNoiseTime = NetVars.byName("DT_BaseEntity", "m_flLastMadeNoiseTime");
		DT_BaseEntity.m_flMaxFallVelocity = NetVars.byName("DT_BaseEntity", "m_flMaxFallVelocity");
		DT_BaseEntity.m_bEligibleForScreenHighlight = NetVars.byName("DT_BaseEntity", "m_bEligibleForScreenHighlight");
		DT_BaseViewModel.m_nModelIndex = NetVars.byName("DT_BaseViewModel", "m_nModelIndex");
		DT_BaseViewModel.m_hWeapon = NetVars.byName("DT_BaseViewModel", "m_hWeapon");
		DT_BaseViewModel.m_nSkin = NetVars.byName("DT_BaseViewModel", "m_nSkin");
		DT_BaseViewModel.m_nBody = NetVars.byName("DT_BaseViewModel", "m_nBody");
		DT_BaseViewModel.m_nSequence = NetVars.byName("DT_BaseViewModel", "m_nSequence");
		DT_BaseViewModel.m_nViewModelIndex = NetVars.byName("DT_BaseViewModel", "m_nViewModelIndex");
		DT_BaseViewModel.m_flPlaybackRate = NetVars.byName("DT_BaseViewModel", "m_flPlaybackRate");
		DT_BaseViewModel.m_fEffects = NetVars.byName("DT_BaseViewModel", "m_fEffects");
		DT_BaseViewModel.m_nAnimationParity = NetVars.byName("DT_BaseViewModel", "m_nAnimationParity");
		DT_BaseViewModel.m_hOwner = NetVars.byName("DT_BaseViewModel", "m_hOwner");
		DT_BaseViewModel.m_nNewSequenceParity = NetVars.byName("DT_BaseViewModel", "m_nNewSequenceParity");
		DT_BaseViewModel.m_nResetEventsParity = NetVars.byName("DT_BaseViewModel", "m_nResetEventsParity");
		DT_BaseViewModel.m_nMuzzleFlashParity = NetVars.byName("DT_BaseViewModel", "m_nMuzzleFlashParity");
		DT_BaseViewModel.m_bShouldIgnoreOffsetAndAccuracy = NetVars.byName("DT_BaseViewModel",
				"m_bShouldIgnoreOffsetAndAccuracy");
		DT_CSPlayer.m_flAnimTime = NetVars.byName("DT_CSPlayer", "m_flAnimTime");
		DT_CSPlayer.m_flSimulationTime = NetVars.byName("DT_CSPlayer", "m_flSimulationTime");
		DT_CSPlayer.m_cellbits = NetVars.byName("DT_CSPlayer", "m_cellbits");
		DT_CSPlayer.m_cellX = NetVars.byName("DT_CSPlayer", "m_cellX");
		DT_CSPlayer.m_cellY = NetVars.byName("DT_CSPlayer", "m_cellY");
		DT_CSPlayer.m_cellZ = NetVars.byName("DT_CSPlayer", "m_cellZ");
		DT_CSPlayer.m_angRotation = NetVars.byName("DT_CSPlayer", "m_angRotation");
		DT_CSPlayer.m_nModelIndex = NetVars.byName("DT_CSPlayer", "m_nModelIndex");
		DT_CSPlayer.m_fEffects = NetVars.byName("DT_CSPlayer", "m_fEffects");
		DT_CSPlayer.m_nRenderMode = NetVars.byName("DT_CSPlayer", "m_nRenderMode");
		DT_CSPlayer.m_nRenderFX = NetVars.byName("DT_CSPlayer", "m_nRenderFX");
		DT_CSPlayer.m_clrRender = NetVars.byName("DT_CSPlayer", "m_clrRender");
		DT_CSPlayer.m_iTeamNum = NetVars.byName("DT_CSPlayer", "m_iTeamNum");
		DT_CSPlayer.m_iPendingTeamNum = NetVars.byName("DT_CSPlayer", "m_iPendingTeamNum");
		DT_CSPlayer.m_CollisionGroup = NetVars.byName("DT_CSPlayer", "m_CollisionGroup");
		DT_CSPlayer.m_flElasticity = NetVars.byName("DT_CSPlayer", "m_flElasticity");
		DT_CSPlayer.m_flShadowCastDistance = NetVars.byName("DT_CSPlayer", "m_flShadowCastDistance");
		DT_CSPlayer.m_hOwnerEntity = NetVars.byName("DT_CSPlayer", "m_hOwnerEntity");
		DT_CSPlayer.m_hEffectEntity = NetVars.byName("DT_CSPlayer", "m_hEffectEntity");
		DT_CSPlayer.moveparent = NetVars.byName("DT_CSPlayer", "moveparent");
		DT_CSPlayer.m_iParentAttachment = NetVars.byName("DT_CSPlayer", "m_iParentAttachment");
		DT_CSPlayer.m_iName = NetVars.byName("DT_CSPlayer", "m_iName");
		DT_CSPlayer.m_Collision = NetVars.byName("DT_CSPlayer", "m_Collision");
		DT_CSPlayer.m_vecMins = NetVars.byName("DT_CSPlayer", "m_vecMins");
		DT_CSPlayer.m_vecMaxs = NetVars.byName("DT_CSPlayer", "m_vecMaxs");
		DT_CSPlayer.m_nSolidType = NetVars.byName("DT_CSPlayer", "m_nSolidType");
		DT_CSPlayer.m_usSolidFlags = NetVars.byName("DT_CSPlayer", "m_usSolidFlags");
		DT_CSPlayer.m_nSurroundType = NetVars.byName("DT_CSPlayer", "m_nSurroundType");
		DT_CSPlayer.m_triggerBloat = NetVars.byName("DT_CSPlayer", "m_triggerBloat");
		DT_CSPlayer.m_vecSpecifiedSurroundingMins = NetVars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMins");
		DT_CSPlayer.m_vecSpecifiedSurroundingMaxs = NetVars.byName("DT_CSPlayer", "m_vecSpecifiedSurroundingMaxs");
		DT_CSPlayer.m_iTextureFrameIndex = NetVars.byName("DT_CSPlayer", "m_iTextureFrameIndex");
		DT_CSPlayer.m_bSimulatedEveryTick = NetVars.byName("DT_CSPlayer", "m_bSimulatedEveryTick");
		DT_CSPlayer.m_bAnimatedEveryTick = NetVars.byName("DT_CSPlayer", "m_bAnimatedEveryTick");
		DT_CSPlayer.m_bAlternateSorting = NetVars.byName("DT_CSPlayer", "m_bAlternateSorting");
		DT_CSPlayer.m_bSpotted = NetVars.byName("DT_CSPlayer", "m_bSpotted");
		DT_CSPlayer.m_bSpottedBy = NetVars.byName("DT_CSPlayer", "m_bSpottedBy");
		DT_CSPlayer.m_bSpottedByMask = NetVars.byName("DT_CSPlayer", "m_bSpottedByMask");
		DT_CSPlayer.m_bIsAutoaimTarget = NetVars.byName("DT_CSPlayer", "m_bIsAutoaimTarget");
		DT_CSPlayer.m_fadeMinDist = NetVars.byName("DT_CSPlayer", "m_fadeMinDist");
		DT_CSPlayer.m_fadeMaxDist = NetVars.byName("DT_CSPlayer", "m_fadeMaxDist");
		DT_CSPlayer.m_flFadeScale = NetVars.byName("DT_CSPlayer", "m_flFadeScale");
		DT_CSPlayer.m_nMinCPULevel = NetVars.byName("DT_CSPlayer", "m_nMinCPULevel");
		DT_CSPlayer.m_nMaxCPULevel = NetVars.byName("DT_CSPlayer", "m_nMaxCPULevel");
		DT_CSPlayer.m_nMinGPULevel = NetVars.byName("DT_CSPlayer", "m_nMinGPULevel");
		DT_CSPlayer.m_nMaxGPULevel = NetVars.byName("DT_CSPlayer", "m_nMaxGPULevel");
		DT_CSPlayer.m_flUseLookAtAngle = NetVars.byName("DT_CSPlayer", "m_flUseLookAtAngle");
		DT_CSPlayer.m_flLastMadeNoiseTime = NetVars.byName("DT_CSPlayer", "m_flLastMadeNoiseTime");
		DT_CSPlayer.m_flMaxFallVelocity = NetVars.byName("DT_CSPlayer", "m_flMaxFallVelocity");
		DT_CSPlayer.m_bEligibleForScreenHighlight = NetVars.byName("DT_CSPlayer", "m_bEligibleForScreenHighlight");
		DT_CSPlayer.m_nSequence = NetVars.byName("DT_CSPlayer", "m_nSequence");
		DT_CSPlayer.m_nForceBone = NetVars.byName("DT_CSPlayer", "m_nForceBone");
		DT_CSPlayer.m_vecForce = NetVars.byName("DT_CSPlayer", "m_vecForce");
		DT_CSPlayer.m_nSkin = NetVars.byName("DT_CSPlayer", "m_nSkin");
		DT_CSPlayer.m_nBody = NetVars.byName("DT_CSPlayer", "m_nBody");
		DT_CSPlayer.m_nHitboxSet = NetVars.byName("DT_CSPlayer", "m_nHitboxSet");
		DT_CSPlayer.m_flModelScale = NetVars.byName("DT_CSPlayer", "m_flModelScale");
		DT_CSPlayer.m_flPoseParameter = NetVars.byName("DT_CSPlayer", "m_flPoseParameter");
		DT_CSPlayer.m_flPlaybackRate = NetVars.byName("DT_CSPlayer", "m_flPlaybackRate");
		DT_CSPlayer.m_flEncodedController = NetVars.byName("DT_CSPlayer", "m_flEncodedController");
		DT_CSPlayer.m_bClientSideAnimation = NetVars.byName("DT_CSPlayer", "m_bClientSideAnimation");
		DT_CSPlayer.m_bClientSideFrameReset = NetVars.byName("DT_CSPlayer", "m_bClientSideFrameReset");
		DT_CSPlayer.m_bClientSideRagdoll = NetVars.byName("DT_CSPlayer", "m_bClientSideRagdoll");
		DT_CSPlayer.m_nNewSequenceParity = NetVars.byName("DT_CSPlayer", "m_nNewSequenceParity");
		DT_CSPlayer.m_nResetEventsParity = NetVars.byName("DT_CSPlayer", "m_nResetEventsParity");
		DT_CSPlayer.m_nMuzzleFlashParity = NetVars.byName("DT_CSPlayer", "m_nMuzzleFlashParity");
		DT_CSPlayer.m_hLightingOrigin = NetVars.byName("DT_CSPlayer", "m_hLightingOrigin");
		DT_CSPlayer.m_flCycle = NetVars.byName("DT_CSPlayer", "m_flCycle");
		DT_CSPlayer.m_flFrozen = NetVars.byName("DT_CSPlayer", "m_flFrozen");
		DT_CSPlayer.m_ScaleType = NetVars.byName("DT_CSPlayer", "m_ScaleType");
		DT_CSPlayer.m_bSuppressAnimSounds = NetVars.byName("DT_CSPlayer", "m_bSuppressAnimSounds");
		DT_CSPlayer.m_nHighlightColorR = NetVars.byName("DT_CSPlayer", "m_nHighlightColorR");
		DT_CSPlayer.m_nHighlightColorG = NetVars.byName("DT_CSPlayer", "m_nHighlightColorG");
		DT_CSPlayer.m_nHighlightColorB = NetVars.byName("DT_CSPlayer", "m_nHighlightColorB");
		DT_CSPlayer.m_flexWeight = NetVars.byName("DT_CSPlayer", "m_flexWeight");
		DT_CSPlayer.m_blinktoggle = NetVars.byName("DT_CSPlayer", "m_blinktoggle");
		DT_CSPlayer.m_viewtarget = NetVars.byName("DT_CSPlayer", "m_viewtarget");
		DT_CSPlayer.m_flNextAttack = NetVars.byName("DT_CSPlayer", "m_flNextAttack");
		DT_CSPlayer.m_hMyWeapons = NetVars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_LastHitGroup = NetVars.byName("DT_CSPlayer", "m_LastHitGroup");
		DT_CSPlayer.m_hActiveWeapon = NetVars.byName("DT_CSPlayer", "m_hActiveWeapon");
		DT_CSPlayer.m_flTimeOfLastInjury = NetVars.byName("DT_CSPlayer", "m_flTimeOfLastInjury");
		DT_CSPlayer.m_nRelativeDirectionOfLastInjury = NetVars.byName("DT_CSPlayer",
				"m_nRelativeDirectionOfLastInjury");
		DT_CSPlayer.m_hMyWeapons = NetVars.byName("DT_CSPlayer", "m_hMyWeapons");
		DT_CSPlayer.m_hMyWearables = NetVars.byName("DT_CSPlayer", "m_hMyWearables");
		DT_CSPlayer.m_Local = NetVars.byName("DT_CSPlayer", "m_Local");
		DT_CSPlayer.m_chAreaBits = NetVars.byName("DT_CSPlayer", "m_chAreaBits");
		DT_CSPlayer.m_chAreaPortalBits = NetVars.byName("DT_CSPlayer", "m_chAreaPortalBits");
		DT_CSPlayer.m_iHideHUD = NetVars.byName("DT_CSPlayer", "m_iHideHUD");
		DT_CSPlayer.m_flFOVRate = NetVars.byName("DT_CSPlayer", "m_flFOVRate");
		DT_CSPlayer.m_bDucked = NetVars.byName("DT_CSPlayer", "m_bDucked");
		DT_CSPlayer.m_bDucking = NetVars.byName("DT_CSPlayer", "m_bDucking");
		DT_CSPlayer.m_flLastDuckTime = NetVars.byName("DT_CSPlayer", "m_flLastDuckTime");
		DT_CSPlayer.m_bInDuckJump = NetVars.byName("DT_CSPlayer", "m_bInDuckJump");
		DT_CSPlayer.m_nDuckTimeMsecs = NetVars.byName("DT_CSPlayer", "m_nDuckTimeMsecs");
		DT_CSPlayer.m_nDuckJumpTimeMsecs = NetVars.byName("DT_CSPlayer", "m_nDuckJumpTimeMsecs");
		DT_CSPlayer.m_nJumpTimeMsecs = NetVars.byName("DT_CSPlayer", "m_nJumpTimeMsecs");
		DT_CSPlayer.m_flFallVelocity = NetVars.byName("DT_CSPlayer", "m_flFallVelocity");
		DT_CSPlayer.m_viewPunchAngle = NetVars.byName("DT_CSPlayer", "m_viewPunchAngle");
		DT_CSPlayer.m_aimPunchAngle = NetVars.byName("DT_CSPlayer", "m_aimPunchAngle");
		DT_CSPlayer.m_aimPunchAngleVel = NetVars.byName("DT_CSPlayer", "m_aimPunchAngleVel");
		DT_CSPlayer.m_bDrawViewmodel = NetVars.byName("DT_CSPlayer", "m_bDrawViewmodel");
		DT_CSPlayer.m_bWearingSuit = NetVars.byName("DT_CSPlayer", "m_bWearingSuit");
		DT_CSPlayer.m_bPoisoned = NetVars.byName("DT_CSPlayer", "m_bPoisoned");
		DT_CSPlayer.m_flStepSize = NetVars.byName("DT_CSPlayer", "m_flStepSize");
		DT_CSPlayer.m_bAllowAutoMovement = NetVars.byName("DT_CSPlayer", "m_bAllowAutoMovement");
		DT_CSPlayer.m_vecViewOffset = NetVars.byName("DT_CSPlayer", "m_vecViewOffset[0]");
		DT_CSPlayer.m_flFriction = NetVars.byName("DT_CSPlayer", "m_flFriction");
		DT_CSPlayer.m_fOnTarget = NetVars.byName("DT_CSPlayer", "m_fOnTarget");
		DT_CSPlayer.m_nTickBase = NetVars.byName("DT_CSPlayer", "m_nTickBase");
		DT_CSPlayer.m_nNextThinkTick = NetVars.byName("DT_CSPlayer", "m_nNextThinkTick");
		DT_CSPlayer.m_hLastWeapon = NetVars.byName("DT_CSPlayer", "m_hLastWeapon");
		DT_CSPlayer.m_vecVelocity = NetVars.byName("DT_CSPlayer", "m_vecVelocity[0]");
		DT_CSPlayer.m_vecBaseVelocity = NetVars.byName("DT_CSPlayer", "m_vecBaseVelocity");
		DT_CSPlayer.m_hConstraintEntity = NetVars.byName("DT_CSPlayer", "m_hConstraintEntity");
		DT_CSPlayer.m_vecConstraintCenter = NetVars.byName("DT_CSPlayer", "m_vecConstraintCenter");
		DT_CSPlayer.m_flConstraintRadius = NetVars.byName("DT_CSPlayer", "m_flConstraintRadius");
		DT_CSPlayer.m_flConstraintWidth = NetVars.byName("DT_CSPlayer", "m_flConstraintWidth");
		DT_CSPlayer.m_flConstraintSpeedFactor = NetVars.byName("DT_CSPlayer", "m_flConstraintSpeedFactor");
		DT_CSPlayer.m_bConstraintPastRadius = NetVars.byName("DT_CSPlayer", "m_bConstraintPastRadius");
		DT_CSPlayer.m_flDeathTime = NetVars.byName("DT_CSPlayer", "m_flDeathTime");
		DT_CSPlayer.m_flNextDecalTime = NetVars.byName("DT_CSPlayer", "m_flNextDecalTime");
		DT_CSPlayer.m_fForceTeam = NetVars.byName("DT_CSPlayer", "m_fForceTeam");
		DT_CSPlayer.m_flLaggedMovementValue = NetVars.byName("DT_CSPlayer", "m_flLaggedMovementValue");
		DT_CSPlayer.m_hTonemapController = NetVars.byName("DT_CSPlayer", "m_hTonemapController");
		DT_CSPlayer.pl = NetVars.byName("DT_CSPlayer", "pl");
		DT_CSPlayer.deadflag = NetVars.byName("DT_CSPlayer", "deadflag");
		DT_CSPlayer.m_iFOV = NetVars.byName("DT_CSPlayer", "m_iFOV");
		DT_CSPlayer.m_iFOVStart = NetVars.byName("DT_CSPlayer", "m_iFOVStart");
		DT_CSPlayer.m_flFOVTime = NetVars.byName("DT_CSPlayer", "m_flFOVTime");
		DT_CSPlayer.m_iDefaultFOV = NetVars.byName("DT_CSPlayer", "m_iDefaultFOV");
		DT_CSPlayer.m_hZoomOwner = NetVars.byName("DT_CSPlayer", "m_hZoomOwner");
		DT_CSPlayer.m_afPhysicsFlags = NetVars.byName("DT_CSPlayer", "m_afPhysicsFlags");
		DT_CSPlayer.m_hVehicle = NetVars.byName("DT_CSPlayer", "m_hVehicle");
		DT_CSPlayer.m_hUseEntity = NetVars.byName("DT_CSPlayer", "m_hUseEntity");
		DT_CSPlayer.m_hGroundEntity = NetVars.byName("DT_CSPlayer", "m_hGroundEntity");
		DT_CSPlayer.m_iHealth = NetVars.byName("DT_CSPlayer", "m_iHealth");
		DT_CSPlayer.m_lifeState = NetVars.byName("DT_CSPlayer", "m_lifeState");
		DT_CSPlayer.m_iAmmo = NetVars.byName("DT_CSPlayer", "m_iAmmo");
		DT_CSPlayer.m_iBonusProgress = NetVars.byName("DT_CSPlayer", "m_iBonusProgress");
		DT_CSPlayer.m_iBonusChallenge = NetVars.byName("DT_CSPlayer", "m_iBonusChallenge");
		DT_CSPlayer.m_flMaxspeed = NetVars.byName("DT_CSPlayer", "m_flMaxspeed");
		DT_CSPlayer.m_fFlags = NetVars.byName("DT_CSPlayer", "m_fFlags");
		DT_CSPlayer.m_iObserverMode = NetVars.byName("DT_CSPlayer", "m_iObserverMode");
		DT_CSPlayer.m_bActiveCameraMan = NetVars.byName("DT_CSPlayer", "m_bActiveCameraMan");
		DT_CSPlayer.m_bCameraManXRay = NetVars.byName("DT_CSPlayer", "m_bCameraManXRay");
		DT_CSPlayer.m_bCameraManOverview = NetVars.byName("DT_CSPlayer", "m_bCameraManOverview");
		DT_CSPlayer.m_bCameraManScoreBoard = NetVars.byName("DT_CSPlayer", "m_bCameraManScoreBoard");
		DT_CSPlayer.m_uCameraManGraphs = NetVars.byName("DT_CSPlayer", "m_uCameraManGraphs");
		DT_CSPlayer.m_iDeathPostEffect = NetVars.byName("DT_CSPlayer", "m_iDeathPostEffect");
		DT_CSPlayer.m_hObserverTarget = NetVars.byName("DT_CSPlayer", "m_hObserverTarget");
		DT_CSPlayer.m_hViewModel = NetVars.byName("DT_CSPlayer", "m_hViewModel[0]");
		DT_CSPlayer.m_iCoachingTeam = NetVars.byName("DT_CSPlayer", "m_iCoachingTeam");
		DT_CSPlayer.m_szLastPlaceName = NetVars.byName("DT_CSPlayer", "m_szLastPlaceName");
		DT_CSPlayer.m_vecLadderNormal = NetVars.byName("DT_CSPlayer", "m_vecLadderNormal");
		DT_CSPlayer.m_ladderSurfaceProps = NetVars.byName("DT_CSPlayer", "m_ladderSurfaceProps");
		DT_CSPlayer.m_ubEFNoInterpParity = NetVars.byName("DT_CSPlayer", "m_ubEFNoInterpParity");
		DT_CSPlayer.m_hPostProcessCtrl = NetVars.byName("DT_CSPlayer", "m_hPostProcessCtrl");
		DT_CSPlayer.m_hColorCorrectionCtrl = NetVars.byName("DT_CSPlayer", "m_hColorCorrectionCtrl");
		DT_CSPlayer.m_vphysicsCollisionState = NetVars.byName("DT_CSPlayer", "m_vphysicsCollisionState");
		DT_CSPlayer.m_hViewEntity = NetVars.byName("DT_CSPlayer", "m_hViewEntity");
		DT_CSPlayer.m_bShouldDrawPlayerWhileUsingViewEntity = NetVars.byName("DT_CSPlayer",
				"m_bShouldDrawPlayerWhileUsingViewEntity");
		DT_CSPlayer.m_flDuckAmount = NetVars.byName("DT_CSPlayer", "m_flDuckAmount");
		DT_CSPlayer.m_flDuckSpeed = NetVars.byName("DT_CSPlayer", "m_flDuckSpeed");
		DT_CSPlayer.m_nWaterLevel = NetVars.byName("DT_CSPlayer", "m_nWaterLevel");
		DT_CSPlayer.m_flStamina = NetVars.byName("DT_CSPlayer", "m_flStamina");
		DT_CSPlayer.m_iDirection = NetVars.byName("DT_CSPlayer", "m_iDirection");
		DT_CSPlayer.m_iShotsFired = NetVars.byName("DT_CSPlayer", "m_iShotsFired");
		DT_CSPlayer.m_nNumFastDucks = NetVars.byName("DT_CSPlayer", "m_nNumFastDucks");
		DT_CSPlayer.m_bDuckOverride = NetVars.byName("DT_CSPlayer", "m_bDuckOverride");
		DT_CSPlayer.m_flVelocityModifier = NetVars.byName("DT_CSPlayer", "m_flVelocityModifier");
		DT_CSPlayer.m_bPlayerDominated = NetVars.byName("DT_CSPlayer", "m_bPlayerDominated");
		DT_CSPlayer.m_bPlayerDominatingMe = NetVars.byName("DT_CSPlayer", "m_bPlayerDominatingMe");
		DT_CSPlayer.m_iWeaponPurchasesThisRound = NetVars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisRound");
		DT_CSPlayer.m_unActiveQuestId = NetVars.byName("DT_CSPlayer", "m_unActiveQuestId");
		DT_CSPlayer.m_nQuestProgressReason = NetVars.byName("DT_CSPlayer", "m_nQuestProgressReason");
		DT_CSPlayer.m_iWeaponPurchasesThisMatch = NetVars.byName("DT_CSPlayer", "m_iWeaponPurchasesThisMatch");
		DT_CSPlayer.m_EquippedLoadoutItemDefIndices = NetVars.byName("DT_CSPlayer", "m_EquippedLoadoutItemDefIndices");
		DT_CSPlayer.m_angEyeAngles = NetVars.byName("DT_CSPlayer", "m_angEyeAngles[0]");
		DT_CSPlayer.m_iAddonBits = NetVars.byName("DT_CSPlayer", "m_iAddonBits");
		DT_CSPlayer.m_iPrimaryAddon = NetVars.byName("DT_CSPlayer", "m_iPrimaryAddon");
		DT_CSPlayer.m_iSecondaryAddon = NetVars.byName("DT_CSPlayer", "m_iSecondaryAddon");
		DT_CSPlayer.m_iThrowGrenadeCounter = NetVars.byName("DT_CSPlayer", "m_iThrowGrenadeCounter");
		DT_CSPlayer.m_bWaitForNoAttack = NetVars.byName("DT_CSPlayer", "m_bWaitForNoAttack");
		DT_CSPlayer.m_bIsRespawningForDMBonus = NetVars.byName("DT_CSPlayer", "m_bIsRespawningForDMBonus");
		DT_CSPlayer.m_iPlayerState = NetVars.byName("DT_CSPlayer", "m_iPlayerState");
		DT_CSPlayer.m_iAccount = NetVars.byName("DT_CSPlayer", "m_iAccount");
		DT_CSPlayer.m_iStartAccount = NetVars.byName("DT_CSPlayer", "m_iStartAccount");
		DT_CSPlayer.m_totalHitsOnServer = NetVars.byName("DT_CSPlayer", "m_totalHitsOnServer");
		DT_CSPlayer.m_bInBombZone = NetVars.byName("DT_CSPlayer", "m_bInBombZone");
		DT_CSPlayer.m_bInBuyZone = NetVars.byName("DT_CSPlayer", "m_bInBuyZone");
		DT_CSPlayer.m_bInNoDefuseArea = NetVars.byName("DT_CSPlayer", "m_bInNoDefuseArea");
		DT_CSPlayer.m_bKilledByTaser = NetVars.byName("DT_CSPlayer", "m_bKilledByTaser");
		DT_CSPlayer.m_iMoveState = NetVars.byName("DT_CSPlayer", "m_iMoveState");
		DT_CSPlayer.m_iClass = NetVars.byName("DT_CSPlayer", "m_iClass");
		DT_CSPlayer.m_ArmorValue = NetVars.byName("DT_CSPlayer", "m_ArmorValue");
		DT_CSPlayer.m_angEyeAngles = NetVars.byName("DT_CSPlayer", "m_angEyeAngles");
		DT_CSPlayer.m_bHasDefuser = NetVars.byName("DT_CSPlayer", "m_bHasDefuser");
		DT_CSPlayer.m_bNightVisionOn = NetVars.byName("DT_CSPlayer", "m_bNightVisionOn");
		DT_CSPlayer.m_bHasNightVision = NetVars.byName("DT_CSPlayer", "m_bHasNightVision");
		DT_CSPlayer.m_bInHostageRescueZone = NetVars.byName("DT_CSPlayer", "m_bInHostageRescueZone");
		DT_CSPlayer.m_bIsDefusing = NetVars.byName("DT_CSPlayer", "m_bIsDefusing");
		DT_CSPlayer.m_bIsGrabbingHostage = NetVars.byName("DT_CSPlayer", "m_bIsGrabbingHostage");
		DT_CSPlayer.m_iBlockingUseActionInProgress = NetVars.byName("DT_CSPlayer", "m_iBlockingUseActionInProgress");
		DT_CSPlayer.m_bIsScoped = NetVars.byName("DT_CSPlayer", "m_bIsScoped");
		DT_CSPlayer.m_bIsWalking = NetVars.byName("DT_CSPlayer", "m_bIsWalking");
		DT_CSPlayer.m_nIsAutoMounting = NetVars.byName("DT_CSPlayer", "m_nIsAutoMounting");
		DT_CSPlayer.m_bResumeZoom = NetVars.byName("DT_CSPlayer", "m_bResumeZoom");
		DT_CSPlayer.m_fImmuneToGunGameDamageTime = NetVars.byName("DT_CSPlayer", "m_fImmuneToGunGameDamageTime");
		DT_CSPlayer.m_bGunGameImmunity = NetVars.byName("DT_CSPlayer", "m_bGunGameImmunity");
		DT_CSPlayer.m_bHasMovedSinceSpawn = NetVars.byName("DT_CSPlayer", "m_bHasMovedSinceSpawn");
		DT_CSPlayer.m_bMadeFinalGunGameProgressiveKill = NetVars.byName("DT_CSPlayer",
				"m_bMadeFinalGunGameProgressiveKill");
		DT_CSPlayer.m_iGunGameProgressiveWeaponIndex = NetVars.byName("DT_CSPlayer",
				"m_iGunGameProgressiveWeaponIndex");
		DT_CSPlayer.m_iNumGunGameTRKillPoints = NetVars.byName("DT_CSPlayer", "m_iNumGunGameTRKillPoints");
		DT_CSPlayer.m_iNumGunGameKillsWithCurrentWeapon = NetVars.byName("DT_CSPlayer",
				"m_iNumGunGameKillsWithCurrentWeapon");
		DT_CSPlayer.m_iNumRoundKills = NetVars.byName("DT_CSPlayer", "m_iNumRoundKills");
		DT_CSPlayer.m_fMolotovUseTime = NetVars.byName("DT_CSPlayer", "m_fMolotovUseTime");
		DT_CSPlayer.m_fMolotovDamageTime = NetVars.byName("DT_CSPlayer", "m_fMolotovDamageTime");
		DT_CSPlayer.m_szArmsModel = NetVars.byName("DT_CSPlayer", "m_szArmsModel");
		DT_CSPlayer.m_hCarriedHostage = NetVars.byName("DT_CSPlayer", "m_hCarriedHostage");
		DT_CSPlayer.m_hCarriedHostageProp = NetVars.byName("DT_CSPlayer", "m_hCarriedHostageProp");
		DT_CSPlayer.m_bIsRescuing = NetVars.byName("DT_CSPlayer", "m_bIsRescuing");
		DT_CSPlayer.m_flGroundAccelLinearFracLastTime = NetVars.byName("DT_CSPlayer",
				"m_flGroundAccelLinearFracLastTime");
		DT_CSPlayer.m_bCanMoveDuringFreezePeriod = NetVars.byName("DT_CSPlayer", "m_bCanMoveDuringFreezePeriod");
		DT_CSPlayer.m_isCurrentGunGameLeader = NetVars.byName("DT_CSPlayer", "m_isCurrentGunGameLeader");
		DT_CSPlayer.m_isCurrentGunGameTeamLeader = NetVars.byName("DT_CSPlayer", "m_isCurrentGunGameTeamLeader");
		DT_CSPlayer.m_flGuardianTooFarDistFrac = NetVars.byName("DT_CSPlayer", "m_flGuardianTooFarDistFrac");
		DT_CSPlayer.m_flDetectedByEnemySensorTime = NetVars.byName("DT_CSPlayer", "m_flDetectedByEnemySensorTime");
		DT_CSPlayer.m_bIsPlayerGhost = NetVars.byName("DT_CSPlayer", "m_bIsPlayerGhost");
		DT_CSPlayer.m_iMatchStats_Kills = NetVars.byName("DT_CSPlayer", "m_iMatchStats_Kills");
		DT_CSPlayer.m_iMatchStats_Damage = NetVars.byName("DT_CSPlayer", "m_iMatchStats_Damage");
		DT_CSPlayer.m_iMatchStats_EquipmentValue = NetVars.byName("DT_CSPlayer", "m_iMatchStats_EquipmentValue");
		DT_CSPlayer.m_iMatchStats_MoneySaved = NetVars.byName("DT_CSPlayer", "m_iMatchStats_MoneySaved");
		DT_CSPlayer.m_iMatchStats_KillReward = NetVars.byName("DT_CSPlayer", "m_iMatchStats_KillReward");
		DT_CSPlayer.m_iMatchStats_LiveTime = NetVars.byName("DT_CSPlayer", "m_iMatchStats_LiveTime");
		DT_CSPlayer.m_iMatchStats_Deaths = NetVars.byName("DT_CSPlayer", "m_iMatchStats_Deaths");
		DT_CSPlayer.m_iMatchStats_Assists = NetVars.byName("DT_CSPlayer", "m_iMatchStats_Assists");
		DT_CSPlayer.m_iMatchStats_HeadShotKills = NetVars.byName("DT_CSPlayer", "m_iMatchStats_HeadShotKills");
		DT_CSPlayer.m_iMatchStats_Objective = NetVars.byName("DT_CSPlayer", "m_iMatchStats_Objective");
		DT_CSPlayer.m_iMatchStats_CashEarned = NetVars.byName("DT_CSPlayer", "m_iMatchStats_CashEarned");
		DT_CSPlayer.m_iMatchStats_UtilityDamage = NetVars.byName("DT_CSPlayer", "m_iMatchStats_UtilityDamage");
		DT_CSPlayer.m_iMatchStats_EnemiesFlashed = NetVars.byName("DT_CSPlayer", "m_iMatchStats_EnemiesFlashed");
		DT_CSPlayer.m_rank = NetVars.byName("DT_CSPlayer", "m_rank");
		DT_CSPlayer.m_passiveItems = NetVars.byName("DT_CSPlayer", "m_passiveItems");
		DT_CSPlayer.m_bHasParachute = NetVars.byName("DT_CSPlayer", "m_bHasParachute");
		DT_CSPlayer.m_unMusicID = NetVars.byName("DT_CSPlayer", "m_unMusicID");
		DT_CSPlayer.m_bHasHelmet = NetVars.byName("DT_CSPlayer", "m_bHasHelmet");
		DT_CSPlayer.m_bHasHeavyArmor = NetVars.byName("DT_CSPlayer", "m_bHasHeavyArmor");
		DT_CSPlayer.m_nHeavyAssaultSuitCooldownRemaining = NetVars.byName("DT_CSPlayer",
				"m_nHeavyAssaultSuitCooldownRemaining");
		DT_CSPlayer.m_flFlashDuration = NetVars.byName("DT_CSPlayer", "m_flFlashDuration");
		DT_CSPlayer.m_flFlashMaxAlpha = NetVars.byName("DT_CSPlayer", "m_flFlashMaxAlpha");
		DT_CSPlayer.m_iProgressBarDuration = NetVars.byName("DT_CSPlayer", "m_iProgressBarDuration");
		DT_CSPlayer.m_flProgressBarStartTime = NetVars.byName("DT_CSPlayer", "m_flProgressBarStartTime");
		DT_CSPlayer.m_hRagdoll = NetVars.byName("DT_CSPlayer", "m_hRagdoll");
		DT_CSPlayer.m_hPlayerPing = NetVars.byName("DT_CSPlayer", "m_hPlayerPing");
		DT_CSPlayer.m_cycleLatch = NetVars.byName("DT_CSPlayer", "m_cycleLatch");
		DT_CSPlayer.m_unCurrentEquipmentValue = NetVars.byName("DT_CSPlayer", "m_unCurrentEquipmentValue");
		DT_CSPlayer.m_unRoundStartEquipmentValue = NetVars.byName("DT_CSPlayer", "m_unRoundStartEquipmentValue");
		DT_CSPlayer.m_unFreezetimeEndEquipmentValue = NetVars.byName("DT_CSPlayer", "m_unFreezetimeEndEquipmentValue");
		DT_CSPlayer.m_bIsControllingBot = NetVars.byName("DT_CSPlayer", "m_bIsControllingBot");
		DT_CSPlayer.m_bHasControlledBotThisRound = NetVars.byName("DT_CSPlayer", "m_bHasControlledBotThisRound");
		DT_CSPlayer.m_bCanControlObservedBot = NetVars.byName("DT_CSPlayer", "m_bCanControlObservedBot");
		DT_CSPlayer.m_iControlledBotEntIndex = NetVars.byName("DT_CSPlayer", "m_iControlledBotEntIndex");
		DT_CSPlayer.m_vecAutomoveTargetEnd = NetVars.byName("DT_CSPlayer", "m_vecAutomoveTargetEnd");
		DT_CSPlayer.m_flAutoMoveStartTime = NetVars.byName("DT_CSPlayer", "m_flAutoMoveStartTime");
		DT_CSPlayer.m_flAutoMoveTargetTime = NetVars.byName("DT_CSPlayer", "m_flAutoMoveTargetTime");
		DT_CSPlayer.m_bIsAssassinationTarget = NetVars.byName("DT_CSPlayer", "m_bIsAssassinationTarget");
		DT_CSPlayer.m_bHud_MiniScoreHidden = NetVars.byName("DT_CSPlayer", "m_bHud_MiniScoreHidden");
		DT_CSPlayer.m_bHud_RadarHidden = NetVars.byName("DT_CSPlayer", "m_bHud_RadarHidden");
		DT_CSPlayer.m_nLastKillerIndex = NetVars.byName("DT_CSPlayer", "m_nLastKillerIndex");
		DT_CSPlayer.m_nLastConcurrentKilled = NetVars.byName("DT_CSPlayer", "m_nLastConcurrentKilled");
		DT_CSPlayer.m_nDeathCamMusic = NetVars.byName("DT_CSPlayer", "m_nDeathCamMusic");
		DT_CSPlayer.m_bIsHoldingLookAtWeapon = NetVars.byName("DT_CSPlayer", "m_bIsHoldingLookAtWeapon");
		DT_CSPlayer.m_bIsLookingAtWeapon = NetVars.byName("DT_CSPlayer", "m_bIsLookingAtWeapon");
		DT_CSPlayer.m_iNumRoundKillsHeadshots = NetVars.byName("DT_CSPlayer", "m_iNumRoundKillsHeadshots");
		DT_CSPlayer.m_unTotalRoundDamageDealt = NetVars.byName("DT_CSPlayer", "m_unTotalRoundDamageDealt");
		DT_CSPlayer.m_flLowerBodyYawTarget = NetVars.byName("DT_CSPlayer", "m_flLowerBodyYawTarget");
		DT_CSPlayer.m_bStrafing = NetVars.byName("DT_CSPlayer", "m_bStrafing");
		DT_CSPlayer.m_flThirdpersonRecoil = NetVars.byName("DT_CSPlayer", "m_flThirdpersonRecoil");
		DT_CSPlayer.m_bHideTargetID = NetVars.byName("DT_CSPlayer", "m_bHideTargetID");
		DT_CSPlayer.m_bIsSpawnRappelling = NetVars.byName("DT_CSPlayer", "m_bIsSpawnRappelling");
		DT_CSPlayer.m_vecSpawnRappellingRopeOrigin = NetVars.byName("DT_CSPlayer", "m_vecSpawnRappellingRopeOrigin");
		DT_CSPlayer.m_nSurvivalTeam = NetVars.byName("DT_CSPlayer", "m_nSurvivalTeam");
		DT_CSPlayer.m_hSurvivalAssassinationTarget = NetVars.byName("DT_CSPlayer", "m_hSurvivalAssassinationTarget");
		DT_CSPlayer.m_flHealthShotBoostExpirationTime = NetVars.byName("DT_CSPlayer",
				"m_flHealthShotBoostExpirationTime");
		DT_CSPlayer.m_flLastExoJumpTime = NetVars.byName("DT_CSPlayer", "m_flLastExoJumpTime");
		DT_CSPlayer.m_vecPlayerPatchEconIndices = NetVars.byName("DT_CSPlayer", "m_vecPlayerPatchEconIndices");
		DT_CSPlayer.m_iCrossHairID = NetVars.byName("DT_CSPlayer", "m_bHasDefuser") + 92;
	}
}